import matplotlib.pyplot as plt
import pandas as pd
from sklearn import linear_model
from sklearn.metrics import r2_score
import numpy as np


url="https://raw.githubusercontent.com/jadijadi/machine_learning_with_python_jadi/main/FuelConsumption.csv"
d=pd.read_csv(url)
d


co2 emission y axis

d.head(5)



d.describe()

d.columns

m=np.random.rand(10)
print(m)
ma=m<0.8
ma

mask=np.random.rand(len(d))<0.8 # 80% True, 80 is for train.
mask
print(len(d))
train=d[mask]
print(len(train))
test=d[~mask]
print(len(test))

model=linear_model.LinearRegression()
train_x=train[['ENGINESIZE']]
train_y=train[['CO2EMISSIONS']]
model.fit(train_x,train_y)
a=model.coef_
c=model.intercept_
print("coefficint is",a,"and the intercept is",c)

fig=plt.figure()
ax=fig.add_subplot()
ax.scatter(train['ENGINESIZE'],train['CO2EMISSIONS'],color="blue")
ax.scatter(test['ENGINESIZE'],test['CO2EMISSIONS'],color="green")
ax.set_xlabel("Engine size")
ax.set_ylabel("CO2 Emission")
ax.set_title("The CO2 emission chart")
ax.spines['right'].set_visible(False)
ax.spines['top'].set_visible(False)
plt.plot(train_x,a*train_x+c)

test_x=test[['ENGINESIZE']]
test_y=test[['CO2EMISSIONS']]
test_p=model.predict(test_x)
r2=r2_score(test_p,test_y)
print(r2)

}
